AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Atbash SAM template

Parameters:
  TableConnections:
    Type: String
    Default: 'atbash-connections'
    Description: (Required) The name of the DynamoDB table to store connectionIds for connected clients.
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z\-]+$
    ConstraintDescription: 'Required. Can be characters and dash only. No numbers or special characters allowed.'

  TableUsers:
    Type: String
    Default: 'atbash-users'
    Description: (Required) The name of the DynamoDB table to store registered users.
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z\-]+$
    ConstraintDescription: 'Required. Can be characters and dash only. No numbers or special characters allowed.'

  TableMessages:
    Type: String
    Default: 'atbash-messages'
    Description: (Required) The name of the DyanmoDB table to temporarily store messages to relay
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z\-]+$
    ConstraintDescription: 'Required. Can be characters and dash only. No numbers or special characters allowed.'

  TableMessageboxes:
    Type: String
    Default: 'atbash-messageboxes'
    Description: (Required) The name of the DynamoDB table to store messageboxes
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z\-]+$
    ConstraintDescription: 'Required. Can be characters and dash only. No numbers or special characters allowed.'

  PhoneNumberIndex:
    Type: String
    Default: 'phoneNumber-index'
    Description: (Required) The name of the DynamoDB global index for phoneNumber on the connections table
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z\-]+$
    ConstraintDescription: 'Required. Can be characters and dash only. No numbers or special characters allowed.'

  FCMKey:
    Type: String
    Description: Firebase Cloud Messaging key for authorizing fcm requests

  MediaBucket:
    Type: String
    Default: 'atbash-media'
    Description: (Required) The name of the S3 bucket for temporarily storing media
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z\-]+$
    ConstraintDescription: 'Required. Can be characters and dash only. No numbers or special characters allowed.'

  SNSAccessKeyId:
    Type: String
    Description: (Required) The access key id to send SNS requests

  SNSSecretAccessKey:
    Type: String
    Description: (Required) The secret access key to send SNS requests

  MessageboxKeypair:
    Type: String
    Description: (Required) The keypair for verifying creation of message boxes

Resources:
  # --- DynamoDB Tables --- #
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'connectionId'
          AttributeType: 'S'
        - AttributeName: 'phoneNumber'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'connectionId'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4
      SSESpecification:
        SSEEnabled: true
      TableName: !Ref TableConnections
      GlobalSecondaryIndexes:
        - IndexName: !Ref PhoneNumberIndex
          KeySchema:
            - AttributeName: 'phoneNumber'
              KeyType: 'HASH'
          ProvisionedThroughput:
            ReadCapacityUnits: 4
            WriteCapacityUnits: 4
          Projection:
            ProjectionType: ALL
      Tags:
        - Key: 'auto-delete'
          Value: 'no'

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'phoneNumber'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'phoneNumber'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4
      SSESpecification:
        SSEEnabled: true
      TableName: !Ref TableUsers
      Tags:
        - Key: 'auto-delete'
          Value: 'no'

  MessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
        - AttributeName: 'recipientPhoneNumber'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 4
        WriteCapacityUnits: 4
      SSESpecification:
        SSEEnabled: true
      TableName: !Ref TableMessages
      Tags:
        - Key: 'auto-delete'
          Value: 'no'

  MessageboxesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
      TableName: !Ref TableMessageboxes
      Tags:
        - Key: 'auto-delete'
          Value: 'no'

  MediaStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref MediaBucket

  # --- Lambda Functions --- #
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_CONNECTIONS: !Ref TableConnections
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableConnections
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${AtbashWebSocket}/*'

  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com

  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_CONNECTIONS: !Ref TableConnections
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableConnections

  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: register_user/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
          SNS_ACCESS_KEY_ID: !Ref SNSAccessKeyId
          SNS_SECRET_ACCESS_KEY: !Ref SNSSecretAccessKey
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers
        - Statement:
            - Effect: Allow
              Action:
                - 'sns:Publish'
              Resource:
                - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*'


  RegisterPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref RegisterFunction
      Principal: apigateway.amazonaws.com

  RegisterKeysFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: register_keys/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers

  RegisterKeysPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref RegisterKeysFunction
      Principal: apigateway.amazonaws.com

  GetPrekeyBundleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_prekey_bundle/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers

  GetPrekeyBundlePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetPrekeyBundleFunction
      Principal: apigateway.amazonaws.com

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sendmessage/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_CONNECTIONS: !Ref TableConnections
          TABLE_MESSAGES: !Ref TableMessages
          TABLE_USERS: !Ref TableUsers
          TABLE_MESSAGEBOXES: !Ref TableMessageboxes
          INDEX_PHONE_NUMBER: !Ref PhoneNumberIndex
          FCMKey: !Ref FCMKey
          WEB_SOCKET_DOMAIN: !GetAtt AtbashWebSocket.ApiEndpoint
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableMessages
        - DynamoDBCrudPolicy:
            TableName: !Ref TableConnections
        - DynamoDBReadPolicy:
            TableName: !Ref TableUsers
        - DynamoDBCrudPolicy:
            TableName: !Ref TableMessageboxes
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${AtbashWebSocket}/*'

  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com

  GetUserMessagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getusermessages/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_MESSAGES: !Ref TableMessages
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TableMessages

  GetUserMessagesPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetUserMessagesFunction
      Principal: apigateway.amazonaws.com

  DeleteMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: deletemessage/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_MESSAGES: !Ref TableMessages
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableMessages

  DeleteMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DeleteMessageFunction
      Principal: apigateway.amazonaws.com

  CreateSignedURLFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: createsignedurl/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          MEDIA_BUCKET: !Ref MediaBucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref MediaBucket

  CreateSignedURLPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CreateSignedURLFunction
      Principal: apigateway.amazonaws.com

  GetRSAPublicKeyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getrsapublickey/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TableUsers

  GetRSAPublicKeyPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetRSAPublicKeyFunction
      Principal: apigateway.amazonaws.com

  IsContactOnlineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: iscontactonline/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_CONNECTIONS: !Ref TableConnections
          INDEX_PHONE_NUMBER: !Ref PhoneNumberIndex
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TableConnections

  IsContactOnlinePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IsContactOnlineFunction
      Principal: apigateway.amazonaws.com

  GetNumberPrekeysFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_number_prekeys/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TableUsers

  GetNumberPrekeysPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetNumberPrekeysFunction
      Principal: apigateway.amazonaws.com

  UploadKeysFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: upload_keys
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers

  UploadKeysPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UploadKeysFunction
      Principal: apigateway.amazonaws.com

  SetMessageboxConnectionIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: set_messagebox_connection_id
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          TABLE_MESSAGEBOXES: !Ref TableMessageboxes
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableMessageboxes

  SetMessageboxConnectionIdPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SetMessageboxConnectionIdFunction
      Principal: apigateway.amazonaws.com

  GetServerPublicKeyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_serverpublickey
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Environment:
        Variables:
          MESSAGEBOX_KEYPAIR: !Ref MessageboxKeypair
          TABLE_USERS: !Ref TableUsers

  GetServerPublicKeyPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - AtbashREST
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetServerPublicKeyFunction
      Principal: apigateway.amazonaws.com

  # --- Web Socket API --- #
  AtbashWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: atbash-online
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: '$request.body.action'

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashWebSocket
      RouteKey: $connect
      OperationName: ConnectRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectIntegration
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - OnConnectFunction
    Properties:
      ApiId: !Ref AtbashWebSocket
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashWebSocket
      RouteKey: $disconnect
      OperationName: DisconnectRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectIntegration
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - OnDisconnectFunction
    Properties:
      ApiId: !Ref AtbashWebSocket
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations

  AtbashWebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
    Properties:
      ApiId: !Ref AtbashWebSocket

  AtbashWebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref AtbashWebSocket
      StageName: dev
      DeploymentId: !Ref AtbashWebSocketDeployment

  # --- REST API --- #
  AtbashREST:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: atbash-rest
      ProtocolType: HTTP

  SendMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /messages'
      OperationName: SendMessageRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendMessageIntegration
  SendMessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - SendMessageFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt SendMessageFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  RegisterRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /register'
      OperationName: RegisterRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref RegisterIntegration
  RegisterIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - RegisterFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt RegisterFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  RegisterKeysRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /keys/register'
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref RegisterKeysIntegration
  RegisterKeysIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - RegisterKeysFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt RegisterKeysFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  GetPrekeyBundleRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /keys/get'
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetPrekeyBundleIntegration
  GetPrekeyBundleIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - GetPrekeyBundleFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt GetPrekeyBundleFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'


  GetMessagesRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'GET /message'
      OperationName: GetMessagesRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetMessagesIntegration
  GetMessagesIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - GetUserMessagesFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt GetUserMessagesFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  DeleteMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'DELETE /message/{id}'
      OperationName: DeleteMessageRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DeleteMessageIntegration
  DeleteMessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - DeleteMessageFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt DeleteMessageFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  CreateSignedURLRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /upload'
      OperationName: CreateSignedURLRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref CreateSignedURLIntegration
  CreateSignedURLIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - CreateSignedURLFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt CreateSignedURLFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  GetRSAPublicKeyRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'GET /user/{phoneNumber}/rsa-public-key'
      OperationName: GetRSAPublicKeyRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetRSAPublicKeyIntegration
  GetRSAPublicKeyIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - GetRSAPublicKeyFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt GetRSAPublicKeyFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  IsContactOnlineRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'GET /user/{phoneNumber}/online'
      OperationName: IsContactOnlineRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref IsContactOnlineIntegration
  IsContactOnlineIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - IsContactOnlineFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt IsContactOnlineFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  GetNumberPrekeysRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /keys/getNumber'
      OperationName: GetNumberPrekeysRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetNumberPrekeysIntegration
  GetNumberPrekeysIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - GetNumberPrekeysFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt GetNumberPrekeysFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  UploadKeysRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'POST /keys/upload'
      OperationName: UploadKeysRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref UploadKeysIntegration
  UploadKeysIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - UploadKeysFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt UploadKeysFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  SetMessageboxConnectionIdRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'PUT /messageboxes/{messageboxId}/connectionId'
      OperationName: SetMessageboxConnectionIdRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SetMessageboxConnectionIdIntegration
  SetMessageboxConnectionIdIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - SetMessageboxConnectionIdFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt SetMessageboxConnectionIdFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  GetServerPublicKeyRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref AtbashREST
      RouteKey: 'GET /messageboxes/serverPublicKey'
      OperationName: GetServerPublicKeyRoute
      AuthorizationType: NONE
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GetServerPublicKeyIntegration
  GetServerPublicKeyIntegration:
    Type: AWS::ApiGatewayV2::Integration
    DependsOn:
      - GetServerPublicKeyFunction
    Properties:
      ApiId: !Ref AtbashREST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt GetServerPublicKeyFunction.Arn
          - '/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  AtbashRESTDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - RegisterRoute
    Properties:
      ApiId: !Ref AtbashREST

  AtbashRESTStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref AtbashREST
      StageName: dev
      DeploymentId: !Ref AtbashRESTDeployment
