// Mocks generated by Mockito 5.0.14 from annotations
// in mobile/test/ContactEditPage/ContactEditPage_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mobile/domain/Contact.dart' as _i4;
import 'package:mobile/models/ContactsModel.dart' as _i3;
import 'package:mobx/mobx.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeObservableList_0<T> extends _i1.Fake
    implements _i2.ObservableList<T> {}

/// A class which mocks [ContactsModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactsModel extends _i1.Mock implements _i3.ContactsModel {
  MockContactsModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ObservableList<_i4.Contact> get contacts =>
      (super.noSuchMethod(Invocation.getter(#contacts),
              returnValue: _FakeObservableList_0<_i4.Contact>())
          as _i2.ObservableList<_i4.Contact>);
  @override
  set contacts(_i2.ObservableList<_i4.Contact>? _contacts) =>
      super.noSuchMethod(Invocation.setter(#contacts, _contacts),
          returnValueForMissingStub: null);
  @override
  String get filter =>
      (super.noSuchMethod(Invocation.getter(#filter), returnValue: '')
          as String);
  @override
  set filter(String? _filter) =>
      super.noSuchMethod(Invocation.setter(#filter, _filter),
          returnValueForMissingStub: null);
  @override
  _i2.ObservableList<_i4.Contact> get chatContacts =>
      (super.noSuchMethod(Invocation.getter(#chatContacts),
              returnValue: _FakeObservableList_0<_i4.Contact>())
          as _i2.ObservableList<_i4.Contact>);
  @override
  _i2.ObservableList<_i4.Contact> get savedContacts =>
      (super.noSuchMethod(Invocation.getter(#savedContacts),
              returnValue: _FakeObservableList_0<_i4.Contact>())
          as _i2.ObservableList<_i4.Contact>);
  @override
  _i2.ObservableList<_i4.Contact> get filteredChatContacts =>
      (super.noSuchMethod(Invocation.getter(#filteredChatContacts),
              returnValue: _FakeObservableList_0<_i4.Contact>())
          as _i2.ObservableList<_i4.Contact>);
  @override
  _i2.ObservableList<_i4.Contact> get filteredSavedContacts =>
      (super.noSuchMethod(Invocation.getter(#filteredSavedContacts),
              returnValue: _FakeObservableList_0<_i4.Contact>())
          as _i2.ObservableList<_i4.Contact>);
  @override
  _i5.Future<void> addContact(String? phoneNumber, String? displayName,
          bool? hasChat, bool? save) =>
      (super.noSuchMethod(
          Invocation.method(
              #addContact, [phoneNumber, displayName, hasChat, save]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void startChatWithContact(String? phoneNumber) => super.noSuchMethod(
      Invocation.method(#startChatWithContact, [phoneNumber]),
      returnValueForMissingStub: null);
  @override
  void setContactProfileImage(String? phoneNumber, String? base64Image) =>
      super.noSuchMethod(
          Invocation.method(
              #setContactProfileImage, [phoneNumber, base64Image]),
          returnValueForMissingStub: null);
  @override
  void setContactStatus(String? phoneNumber, String? status) => super
      .noSuchMethod(Invocation.method(#setContactStatus, [phoneNumber, status]),
          returnValueForMissingStub: null);
  @override
  void setContactDisplayName(String? phoneNumber, String? displayName) =>
      super.noSuchMethod(
          Invocation.method(#setContactDisplayName, [phoneNumber, displayName]),
          returnValueForMissingStub: null);
  @override
  void deleteChatsWithContacts(List<String>? phoneNumbers) => super
      .noSuchMethod(Invocation.method(#deleteChatsWithContacts, [phoneNumbers]),
          returnValueForMissingStub: null);
  @override
  void deleteContacts(List<String>? phoneNumbers) =>
      super.noSuchMethod(Invocation.method(#deleteContacts, [phoneNumbers]),
          returnValueForMissingStub: null);
  @override
  _i5.Future<void> initialise() =>
      (super.noSuchMethod(Invocation.method(#initialise, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
}
