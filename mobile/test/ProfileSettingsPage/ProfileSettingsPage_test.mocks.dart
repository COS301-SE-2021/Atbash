// Mocks generated by Mockito 5.0.15 from annotations
// in mobile/test/ProfileSettingsPage/ProfileSettingsPage_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i26;
import 'dart:typed_data' as _i27;

import 'package:crypton/crypton.dart' as _i2;
import 'package:mobile/domain/BlockedNumber.dart' as _i32;
import 'package:mobile/domain/Chat.dart' as _i31;
import 'package:mobile/domain/Contact.dart' as _i5;
import 'package:mobile/domain/Message.dart' as _i30;
import 'package:mobile/services/BlockedNumbersService.dart' as _i6;
import 'package:mobile/services/ChatService.dart' as _i14;
import 'package:mobile/services/ChildBlockedNumberService.dart' as _i11;
import 'package:mobile/services/ChildChatService.dart' as _i9;
import 'package:mobile/services/ChildContactService.dart' as _i23;
import 'package:mobile/services/ChildMessageService.dart' as _i10;
import 'package:mobile/services/ChildProfanityWordService.dart' as _i22;
import 'package:mobile/services/ChildService.dart' as _i8;
import 'package:mobile/services/CommunicationService.dart' as _i28;
import 'package:mobile/services/ContactService.dart' as _i15;
import 'package:mobile/services/DatabaseService.dart' as _i3;
import 'package:mobile/services/EncryptionService.dart' as _i12;
import 'package:mobile/services/MediaService.dart' as _i18;
import 'package:mobile/services/MemoryStoreService.dart' as _i19;
import 'package:mobile/services/MessageboxService.dart' as _i21;
import 'package:mobile/services/MessageService.dart' as _i16;
import 'package:mobile/services/NotificationService.dart' as _i20;
import 'package:mobile/services/ParentService.dart' as _i24;
import 'package:mobile/services/PCConnectionService.dart' as _i4;
import 'package:mobile/services/ProfanityWordService.dart' as _i7;
import 'package:mobile/services/SettingsService.dart' as _i17;
import 'package:mobile/services/UserService.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:synchronized/synchronized.dart' as _i25;
import 'package:web_socket_channel/io.dart' as _i29;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeRSAKeypair_0 extends _i1.Fake implements _i2.RSAKeypair {}

class _FakeDatabaseService_1 extends _i1.Fake implements _i3.DatabaseService {}

class _FakePCConnectionService_2 extends _i1.Fake
    implements _i4.PCConnectionService {}

class _FakeContact_3 extends _i1.Fake implements _i5.Contact {}

class _FakeBlockedNumbersService_4 extends _i1.Fake
    implements _i6.BlockedNumbersService {}

class _FakeProfanityWordService_5 extends _i1.Fake
    implements _i7.ProfanityWordService {}

class _FakeChildService_6 extends _i1.Fake implements _i8.ChildService {}

class _FakeChildChatService_7 extends _i1.Fake implements _i9.ChildChatService {
}

class _FakeChildMessageService_8 extends _i1.Fake
    implements _i10.ChildMessageService {}

class _FakeChildBlockedNumberService_9 extends _i1.Fake
    implements _i11.ChildBlockedNumberService {}

class _FakeEncryptionService_10 extends _i1.Fake
    implements _i12.EncryptionService {}

class _FakeUserService_11 extends _i1.Fake implements _i13.UserService {}

class _FakeChatService_12 extends _i1.Fake implements _i14.ChatService {}

class _FakeContactService_13 extends _i1.Fake implements _i15.ContactService {}

class _FakeMessageService_14 extends _i1.Fake implements _i16.MessageService {}

class _FakeSettingsService_15 extends _i1.Fake implements _i17.SettingsService {
}

class _FakeMediaService_16 extends _i1.Fake implements _i18.MediaService {}

class _FakeMemoryStoreService_17 extends _i1.Fake
    implements _i19.MemoryStoreService {}

class _FakeNotificationService_18 extends _i1.Fake
    implements _i20.NotificationService {}

class _FakeMessageboxService_19 extends _i1.Fake
    implements _i21.MessageboxService {}

class _FakeChildProfanityWordService_20 extends _i1.Fake
    implements _i22.ChildProfanityWordService {}

class _FakeChildContactService_21 extends _i1.Fake
    implements _i23.ChildContactService {}

class _FakeParentService_22 extends _i1.Fake implements _i24.ParentService {}

class _FakeLock_23 extends _i1.Fake implements _i25.Lock {}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i13.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.Future<String> getPhoneNumber() =>
      (super.noSuchMethod(Invocation.method(#getPhoneNumber, []),
          returnValue: Future<String>.value('')) as _i26.Future<String>);
  @override
  _i26.Future<void> setPhoneNumber(String? phoneNumber) => (super.noSuchMethod(
      Invocation.method(#setPhoneNumber, [phoneNumber]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<String> getDisplayName() =>
      (super.noSuchMethod(Invocation.method(#getDisplayName, []),
          returnValue: Future<String>.value('')) as _i26.Future<String>);
  @override
  _i26.Future<void> setDisplayName(String? displayName) => (super.noSuchMethod(
      Invocation.method(#setDisplayName, [displayName]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<String> getStatus() =>
      (super.noSuchMethod(Invocation.method(#getStatus, []),
          returnValue: Future<String>.value('')) as _i26.Future<String>);
  @override
  _i26.Future<void> setStatus(String? status) => (super.noSuchMethod(
      Invocation.method(#setStatus, [status]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<_i27.Uint8List?> getProfileImage() =>
      (super.noSuchMethod(Invocation.method(#getProfileImage, []),
              returnValue: Future<_i27.Uint8List?>.value())
          as _i26.Future<_i27.Uint8List?>);
  @override
  _i26.Future<void> setProfileImage(_i27.Uint8List? profileImage) =>
      (super.noSuchMethod(Invocation.method(#setProfileImage, [profileImage]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<DateTime?> getBirthday() =>
      (super.noSuchMethod(Invocation.method(#getBirthday, []),
          returnValue: Future<DateTime?>.value()) as _i26.Future<DateTime?>);
  @override
  _i26.Future<void> setBirthday(DateTime? birthday) => (super.noSuchMethod(
      Invocation.method(#setBirthday, [birthday]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<String> getDeviceAuthTokenEncoded() =>
      (super.noSuchMethod(Invocation.method(#getDeviceAuthTokenEncoded, []),
          returnValue: Future<String>.value('')) as _i26.Future<String>);
  @override
  _i26.Future<void> storeRSAKeyPair(_i2.RSAKeypair? rsaKeypair) =>
      (super.noSuchMethod(Invocation.method(#storeRSAKeyPair, [rsaKeypair]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<_i2.RSAKeypair> fetchRSAKeyPair() =>
      (super.noSuchMethod(Invocation.method(#fetchRSAKeyPair, []),
              returnValue: Future<_i2.RSAKeypair>.value(_FakeRSAKeypair_0()))
          as _i26.Future<_i2.RSAKeypair>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ContactService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactService extends _i1.Mock implements _i15.ContactService {
  MockContactService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.DatabaseService get databaseService =>
      (super.noSuchMethod(Invocation.getter(#databaseService),
          returnValue: _FakeDatabaseService_1()) as _i3.DatabaseService);
  @override
  _i4.PCConnectionService get pcConnectionService => (super.noSuchMethod(
      Invocation.getter(#pcConnectionService),
      returnValue: _FakePCConnectionService_2()) as _i4.PCConnectionService);
  @override
  void onChanged(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#onChanged, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnChanged(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnChanged, [cb]),
          returnValueForMissingStub: null);
  @override
  _i26.Future<List<_i5.Contact>> fetchAll() =>
      (super.noSuchMethod(Invocation.method(#fetchAll, []),
              returnValue: Future<List<_i5.Contact>>.value(<_i5.Contact>[]))
          as _i26.Future<List<_i5.Contact>>);
  @override
  _i26.Future<_i5.Contact> fetchByPhoneNumber(String? phoneNumber) =>
      (super.noSuchMethod(Invocation.method(#fetchByPhoneNumber, [phoneNumber]),
              returnValue: Future<_i5.Contact>.value(_FakeContact_3()))
          as _i26.Future<_i5.Contact>);
  @override
  _i26.Future<_i5.Contact> insert(_i5.Contact? contact) =>
      (super.noSuchMethod(Invocation.method(#insert, [contact]),
              returnValue: Future<_i5.Contact>.value(_FakeContact_3()))
          as _i26.Future<_i5.Contact>);
  @override
  _i26.Future<_i5.Contact> update(_i5.Contact? contact) =>
      (super.noSuchMethod(Invocation.method(#update, [contact]),
              returnValue: Future<_i5.Contact>.value(_FakeContact_3()))
          as _i26.Future<_i5.Contact>);
  @override
  _i26.Future<void> setContactStatus(
          String? contactPhoneNumber, String? status) =>
      (super.noSuchMethod(
          Invocation.method(#setContactStatus, [contactPhoneNumber, status]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> setContactProfileImage(
          String? contactPhoneNumber, String? profileImage) =>
      (super.noSuchMethod(
              Invocation.method(
                  #setContactProfileImage, [contactPhoneNumber, profileImage]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> setContactBirthday(
          String? contactPhoneNumber, DateTime? birthday) =>
      (super.noSuchMethod(
              Invocation.method(
                  #setContactBirthday, [contactPhoneNumber, birthday]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> deleteByPhoneNumber(String? phoneNumber) => (super
          .noSuchMethod(Invocation.method(#deleteByPhoneNumber, [phoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
      as _i26.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CommunicationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommunicationService extends _i1.Mock
    implements _i28.CommunicationService {
  MockCommunicationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.BlockedNumbersService get blockedNumbersService =>
      (super.noSuchMethod(Invocation.getter(#blockedNumbersService),
              returnValue: _FakeBlockedNumbersService_4())
          as _i6.BlockedNumbersService);
  @override
  _i7.ProfanityWordService get profanityWordService => (super.noSuchMethod(
      Invocation.getter(#profanityWordService),
      returnValue: _FakeProfanityWordService_5()) as _i7.ProfanityWordService);
  @override
  _i8.ChildService get childService =>
      (super.noSuchMethod(Invocation.getter(#childService),
          returnValue: _FakeChildService_6()) as _i8.ChildService);
  @override
  _i9.ChildChatService get childChatService =>
      (super.noSuchMethod(Invocation.getter(#childChatService),
          returnValue: _FakeChildChatService_7()) as _i9.ChildChatService);
  @override
  _i10.ChildMessageService get childMessageService => (super.noSuchMethod(
      Invocation.getter(#childMessageService),
      returnValue: _FakeChildMessageService_8()) as _i10.ChildMessageService);
  @override
  _i11.ChildBlockedNumberService get childBlockedNumberService =>
      (super.noSuchMethod(Invocation.getter(#childBlockedNumberService),
              returnValue: _FakeChildBlockedNumberService_9())
          as _i11.ChildBlockedNumberService);
  @override
  _i12.EncryptionService get encryptionService =>
      (super.noSuchMethod(Invocation.getter(#encryptionService),
          returnValue: _FakeEncryptionService_10()) as _i12.EncryptionService);
  @override
  _i13.UserService get userService =>
      (super.noSuchMethod(Invocation.getter(#userService),
          returnValue: _FakeUserService_11()) as _i13.UserService);
  @override
  _i14.ChatService get chatService =>
      (super.noSuchMethod(Invocation.getter(#chatService),
          returnValue: _FakeChatService_12()) as _i14.ChatService);
  @override
  _i15.ContactService get contactService =>
      (super.noSuchMethod(Invocation.getter(#contactService),
          returnValue: _FakeContactService_13()) as _i15.ContactService);
  @override
  _i16.MessageService get messageService =>
      (super.noSuchMethod(Invocation.getter(#messageService),
          returnValue: _FakeMessageService_14()) as _i16.MessageService);
  @override
  _i17.SettingsService get settingsService =>
      (super.noSuchMethod(Invocation.getter(#settingsService),
          returnValue: _FakeSettingsService_15()) as _i17.SettingsService);
  @override
  _i18.MediaService get mediaService =>
      (super.noSuchMethod(Invocation.getter(#mediaService),
          returnValue: _FakeMediaService_16()) as _i18.MediaService);
  @override
  _i19.MemoryStoreService get memoryStoreService => (super.noSuchMethod(
      Invocation.getter(#memoryStoreService),
      returnValue: _FakeMemoryStoreService_17()) as _i19.MemoryStoreService);
  @override
  _i20.NotificationService get notificationService => (super.noSuchMethod(
      Invocation.getter(#notificationService),
      returnValue: _FakeNotificationService_18()) as _i20.NotificationService);
  @override
  _i21.MessageboxService get messageboxService =>
      (super.noSuchMethod(Invocation.getter(#messageboxService),
          returnValue: _FakeMessageboxService_19()) as _i21.MessageboxService);
  @override
  _i4.PCConnectionService get pcConnectionService => (super.noSuchMethod(
      Invocation.getter(#pcConnectionService),
      returnValue: _FakePCConnectionService_2()) as _i4.PCConnectionService);
  @override
  _i22.ChildProfanityWordService get childProfanityWordService =>
      (super.noSuchMethod(Invocation.getter(#childProfanityWordService),
              returnValue: _FakeChildProfanityWordService_20())
          as _i22.ChildProfanityWordService);
  @override
  _i23.ChildContactService get childContactService => (super.noSuchMethod(
      Invocation.getter(#childContactService),
      returnValue: _FakeChildContactService_21()) as _i23.ChildContactService);
  @override
  _i24.ParentService get parentService =>
      (super.noSuchMethod(Invocation.getter(#parentService),
          returnValue: _FakeParentService_22()) as _i24.ParentService);
  @override
  _i25.Lock get communicationLock =>
      (super.noSuchMethod(Invocation.getter(#communicationLock),
          returnValue: _FakeLock_23()) as _i25.Lock);
  @override
  set communicationLock(_i25.Lock? _communicationLock) => super.noSuchMethod(
      Invocation.setter(#communicationLock, _communicationLock),
      returnValueForMissingStub: null);
  @override
  set channelNumber(_i29.IOWebSocketChannel? _channelNumber) =>
      super.noSuchMethod(Invocation.setter(#channelNumber, _channelNumber),
          returnValueForMissingStub: null);
  @override
  set channelAnonymous(_i29.IOWebSocketChannel? _channelAnonymous) => super
      .noSuchMethod(Invocation.setter(#channelAnonymous, _channelAnonymous),
          returnValueForMissingStub: null);
  @override
  set anonymousConnectionId(String? _anonymousConnectionId) =>
      super.noSuchMethod(
          Invocation.setter(#anonymousConnectionId, _anonymousConnectionId),
          returnValueForMissingStub: null);
  @override
  String get anonymousId =>
      (super.noSuchMethod(Invocation.getter(#anonymousId), returnValue: '')
          as String);
  @override
  set anonymousId(String? _anonymousId) =>
      super.noSuchMethod(Invocation.setter(#anonymousId, _anonymousId),
          returnValueForMissingStub: null);
  @override
  set onStopPrivateChat(void Function(String)? _onStopPrivateChat) => super
      .noSuchMethod(Invocation.setter(#onStopPrivateChat, _onStopPrivateChat),
          returnValueForMissingStub: null);
  @override
  set onAcceptPrivateChat(void Function()? _onAcceptPrivateChat) =>
      super.noSuchMethod(
          Invocation.setter(#onAcceptPrivateChat, _onAcceptPrivateChat),
          returnValueForMissingStub: null);
  @override
  bool Function(String) get shouldBlockNotifications =>
      (super.noSuchMethod(Invocation.getter(#shouldBlockNotifications),
              returnValue: (String incomingPhoneNumber) => false)
          as bool Function(String));
  @override
  set shouldBlockNotifications(
          bool Function(String)? _shouldBlockNotifications) =>
      super.noSuchMethod(
          Invocation.setter(
              #shouldBlockNotifications, _shouldBlockNotifications),
          returnValueForMissingStub: null);
  @override
  set onRemoveChild(void Function()? _onRemoveChild) =>
      super.noSuchMethod(Invocation.setter(#onRemoveChild, _onRemoveChild),
          returnValueForMissingStub: null);
  @override
  set onSetUpChild(void Function()? _onSetUpChild) =>
      super.noSuchMethod(Invocation.setter(#onSetUpChild, _onSetUpChild),
          returnValueForMissingStub: null);
  @override
  set onAllSettingsToParent(void Function()? _onAllSettingsToParent) =>
      super.noSuchMethod(
          Invocation.setter(#onAllSettingsToParent, _onAllSettingsToParent),
          returnValueForMissingStub: null);
  @override
  set onNewProfanityWordToParent(
          void Function()? _onNewProfanityWordToParent) =>
      super.noSuchMethod(
          Invocation.setter(
              #onNewProfanityWordToParent, _onNewProfanityWordToParent),
          returnValueForMissingStub: null);
  @override
  set onChatToParent(void Function()? _onChatToParent) =>
      super.noSuchMethod(Invocation.setter(#onChatToParent, _onChatToParent),
          returnValueForMissingStub: null);
  @override
  set onChildMessageToParent(void Function()? _onChildMessageToParent) =>
      super.noSuchMethod(
          Invocation.setter(#onChildMessageToParent, _onChildMessageToParent),
          returnValueForMissingStub: null);
  @override
  set onEditableSettingsChangeToChild(
          void Function(bool)? _onEditableSettingsChangeToChild) =>
      super.noSuchMethod(
          Invocation.setter(#onEditableSettingsChangeToChild,
              _onEditableSettingsChangeToChild),
          returnValueForMissingStub: null);
  @override
  set onContactImageToParent(void Function()? _onContactImageToParent) =>
      super.noSuchMethod(
          Invocation.setter(#onContactImageToParent, _onContactImageToParent),
          returnValueForMissingStub: null);
  @override
  void onLockedAccountChangeToChild(void Function(bool)? cb) =>
      super.noSuchMethod(Invocation.method(#onLockedAccountChangeToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnLockedAccountChangeToChild(void Function(bool)? cb) =>
      super.noSuchMethod(
          Invocation.method(#disposeOnLockedAccountChangeToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void onContactToParent(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#onContactToParent, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnContactToParent(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnContactToParent, [cb]),
          returnValueForMissingStub: null);
  @override
  void onBlockedNumberToParent(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#onBlockedNumberToParent, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnBlockedNumberToParent(void Function()? cb) => super
      .noSuchMethod(Invocation.method(#disposeOnBlockedNumberToParent, [cb]),
          returnValueForMissingStub: null);
  @override
  void onBlockedNumberToChild(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#onBlockedNumberToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnBlockedNumberToChild(void Function()? cb) => super.noSuchMethod(
      Invocation.method(#disposeOnBlockedNumberToChild, [cb]),
      returnValueForMissingStub: null);
  @override
  void onNewProfanityWordToChild(void Function()? cb) =>
      super.noSuchMethod(Invocation.method(#onNewProfanityWordToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnNewProfanityWordToChild(void Function()? cb) => super
      .noSuchMethod(Invocation.method(#disposeOnNewProfanityWordToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void onAllSettingsToChild(
          void Function(bool, bool, bool, bool, bool, bool, bool, bool, bool,
                  bool, bool, bool)?
              cb) =>
      super.noSuchMethod(Invocation.method(#onAllSettingsToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnAllSettingsToChild(
          void Function(bool, bool, bool, bool, bool, bool, bool, bool, bool,
                  bool, bool, bool)?
              cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnAllSettingsToChild, [cb]),
          returnValueForMissingStub: null);
  @override
  void onMessage(void Function(_i30.Message)? cb) =>
      super.noSuchMethod(Invocation.method(#onMessage, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnMessage(void Function(_i30.Message)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnMessage, [cb]),
          returnValueForMissingStub: null);
  @override
  void onDelete(void Function(String)? cb) =>
      super.noSuchMethod(Invocation.method(#onDelete, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnDelete(void Function(String)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnDelete, [cb]),
          returnValueForMissingStub: null);
  @override
  void onAck(void Function(String)? cb) =>
      super.noSuchMethod(Invocation.method(#onAck, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnAck(void Function(String)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnAck, [cb]),
          returnValueForMissingStub: null);
  @override
  void onAckSeen(void Function(List<String>)? cb) =>
      super.noSuchMethod(Invocation.method(#onAckSeen, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnAckSeen(void Function(List<String>)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnAckSeen, [cb]),
          returnValueForMissingStub: null);
  @override
  void onMessageLiked(void Function(String, bool)? cb) =>
      super.noSuchMethod(Invocation.method(#onMessageLiked, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnMessageLiked(void Function(String, bool)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnMessageLiked, [cb]),
          returnValueForMissingStub: null);
  @override
  void onMessageEdited(void Function(String, String)? cb) =>
      super.noSuchMethod(Invocation.method(#onMessageEdited, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnMessageEdited(void Function(String, String)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnMessageEdited, [cb]),
          returnValueForMissingStub: null);
  @override
  void onLockedAccountSet(void Function(bool)? cb) =>
      super.noSuchMethod(Invocation.method(#onLockedAccountSet, [cb]),
          returnValueForMissingStub: null);
  @override
  void disposeOnLockedAccountSet(void Function(bool)? cb) =>
      super.noSuchMethod(Invocation.method(#disposeOnLockedAccountSet, [cb]),
          returnValueForMissingStub: null);
  @override
  _i26.Future<void> connectToPc(String? relayId) => (super.noSuchMethod(
      Invocation.method(#connectToPc, [relayId]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> registerConnectionForMessagebox(String? mid) =>
      (super.noSuchMethod(
              Invocation.method(#registerConnectionForMessagebox, [mid]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> goOnline() => (super.noSuchMethod(
      Invocation.method(#goOnline, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendMessage(_i30.Message? message, _i31.ChatType? chatType,
          String? recipientPhoneNumber, String? repliedMessageId) =>
      (super.noSuchMethod(
              Invocation.method(#sendMessage,
                  [message, chatType, recipientPhoneNumber, repliedMessageId]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendImage(_i30.Message? message, _i31.ChatType? chatType,
          String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(
                  #sendImage, [message, chatType, recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendDelete(
          String? messageId, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendDelete, [messageId, recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendLiked(
          String? messageId, bool? liked, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(
                  #sendLiked, [messageId, liked, recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendEditedMessage(String? messageID, String? newMessage,
          String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendEditedMessage,
                  [messageID, newMessage, recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendOnlineStatus(
          bool? online, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
          Invocation.method(#sendOnlineStatus, [online, recipientPhoneNumber]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendStatus(String? status, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendStatus, [status, recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendBirthday(int? birthday, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
          Invocation.method(#sendBirthday, [birthday, recipientPhoneNumber]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendProfileImage(
          String? profileImageBase64, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
          Invocation.method(
              #sendProfileImage, [profileImageBase64, recipientPhoneNumber]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendAck(String? messageId, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendAck, [messageId, recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendAckSeen(
          List<String>? messageIds, String? recipientPhoneNumber) =>
      (super.noSuchMethod(
          Invocation.method(#sendAckSeen, [messageIds, recipientPhoneNumber]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendRequestStatus(String? contactPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendRequestStatus, [contactPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendRequestBirthday(String? contactPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendRequestBirthday, [contactPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendRequestProfileImage(String? contactPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendRequestProfileImage, [contactPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendStartPrivateChat(String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendStartPrivateChat, [recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendStopPrivateChat(String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendStopPrivateChat, [recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendAcceptPrivateChat(String? recipientPhoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(#sendAcceptPrivateChat, [recipientPhoneNumber]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendAddChild(
          String? childNumber, String? name, String? code) =>
      (super.noSuchMethod(
              Invocation.method(#sendAddChild, [childNumber, name, code]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendRemoveChild(String? childNumber) => (super.noSuchMethod(
      Invocation.method(#sendRemoveChild, [childNumber]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendAllSettingsToChild(
          String? childNumber,
          bool? editableSettings,
          bool? blurImages,
          bool? safeMode,
          bool? shareProfilePicture,
          bool? shareStatus,
          bool? shareReadReceipts,
          bool? shareBirthday,
          bool? lockedAccount,
          bool? privateChatAccess,
          bool? blockSaveMedia,
          bool? blockEditingMessages,
          bool? blockDeletingMessages) =>
      (super.noSuchMethod(
              Invocation.method(#sendAllSettingsToChild, [
                childNumber,
                editableSettings,
                blurImages,
                safeMode,
                shareProfilePicture,
                shareStatus,
                shareReadReceipts,
                shareBirthday,
                lockedAccount,
                privateChatAccess,
                blockSaveMedia,
                blockEditingMessages,
                blockDeletingMessages
              ]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendBlockedNumberToChild(String? childNumber,
          _i32.BlockedNumber? blockedNumber, String? operation) =>
      (super.noSuchMethod(
              Invocation.method(#sendBlockedNumberToChild,
                  [childNumber, blockedNumber, operation]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendSetupChild(String? parentNumber) => (super.noSuchMethod(
      Invocation.method(#sendSetupChild, [parentNumber]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendAllSettingsToParent(
          String? parentNumber,
          bool? blurImages,
          bool? safeMode,
          bool? shareProfilePicture,
          bool? shareStatus,
          bool? shareReadReceipts,
          bool? shareBirthday) =>
      (super.noSuchMethod(
              Invocation.method(#sendAllSettingsToParent, [
                parentNumber,
                blurImages,
                safeMode,
                shareProfilePicture,
                shareStatus,
                shareReadReceipts,
                shareBirthday
              ]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendEditableSettingsChangeToChild(
          String? childNumber, bool? value) =>
      (super.noSuchMethod(
              Invocation.method(
                  #sendEditableSettingsChangeToChild, [childNumber, value]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendLockedAccountChangeToChild(
          String? childNumber, bool? value) =>
      (super.noSuchMethod(
              Invocation.method(
                  #sendLockedAccountChangeToChild, [childNumber, value]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<void> sendBlockedNumberToParent(String? parentNumber,
          _i32.BlockedNumber? number, String? operation) =>
      (super.noSuchMethod(
          Invocation.method(
              #sendBlockedNumberToParent, [parentNumber, number, operation]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendChatToParent(
          String? parentNumber, _i31.Chat? chat, String? operation) =>
      (super.noSuchMethod(
          Invocation.method(#sendChatToParent, [parentNumber, chat, operation]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendChildMessageToParent(
          String? parentNumber, _i30.Message? message) =>
      (super.noSuchMethod(
          Invocation.method(#sendChildMessageToParent, [parentNumber, message]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub:
              Future<void>.value()) as _i26.Future<void>);
  @override
  _i26.Future<void> sendContactToParent(
          String? parentNumber, _i5.Contact? contact, String? operation) =>
      (super.noSuchMethod(
              Invocation.method(
                  #sendContactToParent, [parentNumber, contact, operation]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i26.Future<void>);
  @override
  _i26.Future<_i28.EventPayload?> getParsedEventPayload(
          Map<String, Object?>? event) =>
      (super.noSuchMethod(Invocation.method(#getParsedEventPayload, [event]),
              returnValue: Future<_i28.EventPayload?>.value())
          as _i26.Future<_i28.EventPayload?>);
  @override
  String toString() => super.toString();
}
