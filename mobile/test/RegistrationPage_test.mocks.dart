// Mocks generated by Mockito 5.0.14 from annotations
// in mobile/test/RegistrationPage_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:typed_data' as _i5;

import 'package:mobile/models/UserModel.dart' as _i4;
import 'package:mobile/services/UserService.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i2.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> register(String? phoneNumber) =>
      (super.noSuchMethod(Invocation.method(#register, [phoneNumber]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isRegistered() =>
      (super.noSuchMethod(Invocation.method(#isRegistered, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<String?> getUserProfilePictureAsString() =>
      (super.noSuchMethod(Invocation.method(#getUserProfilePictureAsString, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<String> getUserPhoneNumber() =>
      (super.noSuchMethod(Invocation.method(#getUserPhoneNumber, []),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [UserModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserModel extends _i1.Mock implements _i4.UserModel {
  MockUserModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get status =>
      (super.noSuchMethod(Invocation.getter(#status), returnValue: '')
          as String);
  @override
  set status(String? _status) =>
      super.noSuchMethod(Invocation.setter(#status, _status),
          returnValueForMissingStub: null);
  @override
  String get displayName =>
      (super.noSuchMethod(Invocation.getter(#displayName), returnValue: '')
          as String);
  @override
  set displayName(String? _displayName) =>
      super.noSuchMethod(Invocation.setter(#displayName, _displayName),
          returnValueForMissingStub: null);
  @override
  _i5.Uint8List get profileImage =>
      (super.noSuchMethod(Invocation.getter(#profileImage),
          returnValue: _i5.Uint8List(0)) as _i5.Uint8List);
  @override
  set profileImage(_i5.Uint8List? _profileImage) =>
      super.noSuchMethod(Invocation.setter(#profileImage, _profileImage),
          returnValueForMissingStub: null);
  @override
  void setDisplayName(String? displayName) =>
      super.noSuchMethod(Invocation.method(#setDisplayName, [displayName]),
          returnValueForMissingStub: null);
  @override
  void setProfileImage(_i5.Uint8List? profileImage) =>
      super.noSuchMethod(Invocation.method(#setProfileImage, [profileImage]),
          returnValueForMissingStub: null);
  @override
  void setStatus(String? status) =>
      super.noSuchMethod(Invocation.method(#setStatus, [status]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
